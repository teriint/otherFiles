1
00:00:02,260 --> 00:00:07,040
Ahora sabemos qu reaccionar en realidad es que es hora de ensuciarnos las manos.

2
00:00:07,070 --> 00:00:14,900
Y para eso yo era un cdigo Penn Dot I O que es como nuestro editor web que nos permite escribir aplicaciones

3
00:00:14,960 --> 00:00:20,120
HVM LCS y Javascript muy simples o realmente ms como un patio de recreo.

4
00:00:20,150 --> 00:00:23,570
Realmente no usaremos eso para construir proyectos reales en este curso.

5
00:00:23,630 --> 00:00:29,730
Usaremos una configuracin local para eso, pero es genial sumergirse en reaccionar de manera codependiente.

6
00:00:29,810 --> 00:00:36,450
S que puede hacer clic en Crear y crear un llamado bolgrafo que es simplemente un espacio de trabajo donde puede escribir

7
00:00:36,500 --> 00:00:39,330
h t m l s s y cdigo JavaScript.

8
00:00:39,350 --> 00:00:44,150
Ahora en este editor tienes tres reas para H M L C S S y Javascript.

9
00:00:44,150 --> 00:00:47,830
Y ahora vamos a escribir una aplicacin muy simple.

10
00:00:47,870 --> 00:00:54,650
Una demostracin para ver cmo escribimos algo con HVM normal, todos los javascript, y as sucesivamente, y

11
00:00:54,680 --> 00:00:59,440
cmo luego reaccionamos, quizs tengamos ms facilidad para crear una aplicacin as.

12
00:00:59,440 --> 00:01:05,210
Y la parte HVM de este editor te hace morir y puedes crear esto rpidamente, pero escribiendo Dev y

13
00:01:05,210 --> 00:01:06,160
golpeando la pestaa.

14
00:01:06,170 --> 00:01:08,250
Esto expandir automticamente esto.

15
00:01:08,540 --> 00:01:12,890
Y luego, ahora agregar una tecnologa y una parte de la salida.

16
00:01:12,900 --> 00:01:19,210
Max mi nombre y debajo de la subida del prrafo dicen que tienen 28 aos.

17
00:01:19,220 --> 00:01:20,050
Es mi edad?

18
00:01:20,060 --> 00:01:22,450
Y, por supuesto, no dude en utilizar sus datos aqu.

19
00:01:22,490 --> 00:01:24,950
Entonces esto ahora conduce al resultado a continuacin.

20
00:01:24,980 --> 00:01:27,320
Se actualiza automticamente.

21
00:01:27,320 --> 00:01:29,820
Ahora, demos un poco de estilo.

22
00:01:29,900 --> 00:01:37,310
Simplemente le damos a Steve una clase de, digamos, persona, el nombre depende de ti y agrega a esta persona C, ya que esta clase con

23
00:01:37,310 --> 00:01:42,260
algo normal de ver es el cdigo de EE. UU., Donde simplemente doy este, digamos un borde.

24
00:01:42,320 --> 00:01:53,150
pxel slido y funciona bien con CCC y una sombra de cuadro de 0 2 pxeles 2 pxeles y digamos que el mismo gris.

25
00:01:53,150 --> 00:01:53,520
Un

26
00:01:53,570 --> 00:01:58,840
Permtanme que usemos un poco ms brillante aqu e.

27
00:01:58,880 --> 00:02:00,010
Para el borde

28
00:02:00,230 --> 00:02:08,240
No le demos tambin el ancho de, digamos, 200 pxeles y el relleno de 20 pxeles, y

29
00:02:08,240 --> 00:02:11,760
ahora tenemos esta carta como se ve debajo.

30
00:02:11,870 --> 00:02:17,990
Ahora esa es la informacin de la tarjeta de una persona que contiene informacin sobre una persona, digamos.

31
00:02:18,290 --> 00:02:27,830
decir que es mostrar en bloque de lnea y darle un margen de 10 pxeles porque ahora lo que puedo

32
00:02:27,830 --> 00:02:36,750
hacer es replicar esto y agregar una segunda persona, digamos Manue, que tiene 29 aos y es mi colega.

33
00:02:36,750 --> 00:02:37,880
Tambin podemos

34
00:02:38,280 --> 00:02:45,930
As que ahora tenemos estas tarjetas de dos personas y se podra pensar fcilmente en esto como una aplicacin web normal en la que

35
00:02:45,930 --> 00:02:52,320
se genera cierta informacin sobre los usuarios o sobre el equipo detrs de un rbol o blog que est creando

36
00:02:52,320 --> 00:02:53,150
algo as.

37
00:02:53,310 --> 00:02:56,110
Estamos usando solo el equipo de Eliseus aqu.

38
00:02:56,250 --> 00:02:59,370
Ahora ya podemos ver un tipo de limitacin.

39
00:02:59,580 --> 00:03:04,150
Siempre estamos reutilizando el mismo cdigo HMO aqu.

40
00:03:04,320 --> 00:03:06,660
Ahora eso no es demasiado problemtico aqu.

41
00:03:06,780 --> 00:03:11,610
Sera ms problemtico si hiciramos algo con cada uno de estos fragmentos con javascript

42
00:03:12,000 --> 00:03:16,800
incluso, pero incluso sin eso podemos pensar en esta parte aqu como un componente.

43
00:03:16,860 --> 00:03:23,290
La muerte de la persona siempre est estructurada de la misma manera, solo varan los datos dentro de ella?

44
00:03:23,310 --> 00:03:29,720
Aqu es donde entra en juego la reaccin, aunque las reacciones a la mayora cuando nos conectamos tambin son a la lgica de JavaScript.

45
00:03:29,730 --> 00:03:34,430
Pero todava podemos usar reaccionar para crear componentes reutilizables aqu.

46
00:03:34,500 --> 00:03:36,300
Para eso agreguemos reaccionar.

47
00:03:36,300 --> 00:03:41,430
Voy a reducir esta serie como parte un poquito y cualquier rea de javascript.

48
00:03:41,550 --> 00:03:44,020
En primer lugar, tiene que importar reaccionar.

49
00:03:44,330 --> 00:03:51,060
Puede hacer clic en ese icono junto a javascript y luego puede descargar o importar algunas

50
00:03:51,060 --> 00:03:55,780
bibliotecas externas de JavaScript y volver a actuar es una biblioteca externa.

51
00:03:55,800 --> 00:04:02,880
En realidad, es tan popular que el bolgrafo Ancoats puede ir al men rpido y desplegable y simplemente

52
00:04:03,000 --> 00:04:04,230
desplazarse para reaccionar.

53
00:04:04,230 --> 00:04:05,440
Y esto lo agregar.

54
00:04:05,440 --> 00:04:08,030
Ahora aqu agrega la versin 15 Datsik start.

55
00:04:08,030 --> 00:04:12,440
Uno puede diferir en el momento en que lo est viendo en este curso.

56
00:04:12,450 --> 00:04:18,570
la ltima reaccin y luego la configuracin local que utilizar en este curso tambin usar la ltima reaccin muerta.

57
00:04:18,570 --> 00:04:21,390
Cubrir el trabajo en 16 para que est aprendiendo

58
00:04:21,420 --> 00:04:27,600
No se preocupe, sin embargo, estamos usando una versin anterior, pero para la demostracin aqu no tiene importancia.

59
00:04:27,600 --> 00:04:30,720
Tambin necesitamos acelerar y reaccionar Dom.

60
00:04:30,810 --> 00:04:37,860
Ese es otro paquete de la reactivacin del equipo de reactiva en s mismo, como la lgica que necesitamos

61
00:04:37,860 --> 00:04:39,680
para crear estos componentes reactivos.

62
00:04:39,690 --> 00:04:46,530
Ya te dije que volver a actuar es sobre componentes, el brazo de reactivar es, luego, sobre la prestacin de

63
00:04:46,530 --> 00:04:50,980
estos componentes al Daun real con estos dos paquetes agregados. Ya casi llegamos.

64
00:04:51,030 --> 00:04:57,570
el curso. Tendr un mdulo completo donde te presento las caractersticas de prxima generacin ms importantes de los usuarios de Rea.

65
00:04:57,570 --> 00:05:03,030
Pero volver a actuar utiliza una sintaxis especial de JavaScript y muchas caractersticas de javascript de prxima

66
00:05:03,030 --> 00:05:05,410
generacin, vuelvo a esto ms adelante en

67
00:05:05,790 --> 00:05:13,320
Entonces, para desbloquear el uso de estas caractersticas y la sintaxis especial en el men desplegable del preprocesador de javascript,

68
00:05:13,560 --> 00:05:15,170
solo tiene que balbucear.

69
00:05:15,270 --> 00:05:21,330
Eso es simplemente una herramienta que compila el cdigo javascript de la prxima generacin que est escribiendo aqu para codificar que funciona

70
00:05:21,420 --> 00:05:25,750
bien en el navegador para que podamos escribir cdigo con todas las caractersticas que queremos.

71
00:05:25,830 --> 00:05:28,450
Pero el cdigo de barco que funciona en el navegador.

72
00:05:28,770 --> 00:05:34,680
puedes hacer clic en "guardar y cerrar" y ahora podemos comenzar a escribir nuestra aplicacin para volver a actuar aqu en la seccin de javascript.

73
00:05:34,680 --> 00:05:35,430
Y con eso

74
00:05:35,430 --> 00:05:36,690
Entonces, por qu no hacemos eso?

75
00:05:36,990 --> 00:05:43,250
Creemos un componente de repeticin para que tengamos un elemento HVM l personalizado reutilizable.

76
00:05:43,410 --> 00:05:49,400
Podemos usar en lugar de repetir este HVM todo el cdigo aqu a la izquierda en su forma ms bsica

77
00:05:49,410 --> 00:05:55,710
y vas a aprender sobre una forma diferente en este curso a su forma ms bsica, un componente de repeticin es

78
00:05:55,770 --> 00:06:01,140
solo una funcin para que podamos Crear una nueva funcin y tal vez nombrar a esta persona.

79
00:06:01,290 --> 00:06:08,880
Asegrese de que comience con una P mayscula para usarla correctamente con la accin de volver a actuar. Este componente de

80
00:06:09,270 --> 00:06:13,100
persona es una funcin normal pero debe devolver la decodificacin.

81
00:06:13,100 --> 00:06:20,320
En realidad, desea renderizar al Dom y aqu volver a actuar usa una sintaxis especial que se llama J como x.

82
00:06:20,500 --> 00:06:25,680
Estoy usando parntesis aqu para poder escribir o devolver algn cdigo de varias lneas.

83
00:06:26,040 --> 00:06:32,190
Y ahora voy a copiar el cdigo aqu desde la izquierda y pegarlo en mi declaracin de devolucin aqu.

84
00:06:32,400 --> 00:06:35,670
Y esto ciertamente se ve extrao No parece h tim l.

85
00:06:35,760 --> 00:06:43,860
En javascript que no funcionara normalmente y no lo habra hecho si no hubiramos agregado Batal aqu como un

86
00:06:44,520 --> 00:06:50,880
preprocesador Balal, si est configurado correctamente y automticamente est aqu, nos permite usar este ndice

87
00:06:50,880 --> 00:06:57,550
especial que se ve como H. T. correo pero no lo es y profundizar en esa sintaxis en los siguientes mdulos del curso.

88
00:06:57,690 --> 00:07:01,420
Se llama Deus Ex y solo azcar sintctico.

89
00:07:01,530 --> 00:07:06,060
Detrs de escena, esto se compila con el cdigo Javascript normal.

90
00:07:06,060 --> 00:07:11,450
Podemos usarlo aqu para tener un tiempo ms fcil escribiendo lo que realmente queremos renderizar.

91
00:07:11,640 --> 00:07:16,750
Bien, ahora tenemos esa funcin y dije el componente de reaccin a la enfermedad.

92
00:07:17,010 --> 00:07:21,940
Pero por supuesto ahora mismo es solo una funcin convertir esto en un componente de reactivo.

93
00:07:21,960 --> 00:07:26,220
De hecho, tenemos que usar reaccionar para renderizarlo en la pantalla.

94
00:07:26,460 --> 00:07:33,600
As que me deshar de mi bolso y ests a la izquierda y en su lugar estn en un nuevo ao

95
00:07:33,600 --> 00:07:36,560
div y le dar una idea de, digamos, p.

96
00:07:36,710 --> 00:07:39,440
Sin embargo, puedes elegir cualquier identificacin que desees.

97
00:07:39,560 --> 00:07:45,430
Ahora reaccionas paquete que importamos es responsable de analizar correctamente el cdigo de das.

98
00:07:45,450 --> 00:07:47,450
Aqu est el cdigo GSX.

99
00:07:47,660 --> 00:07:52,620
El paquete Obert que importamos fue el dormitorio de la reactivacin si lo recuerda.

100
00:07:52,670 --> 00:07:55,910
Siempre puedes verificar en el equipo en el que puedo reaccionar.

101
00:07:56,090 --> 00:08:02,980
De hecho, esto expone una Dom de reactivacin de objeto escrita as con todos los caracteres Dom mayscula que

102
00:08:02,990 --> 00:08:05,000
tiene un mtodo de representacin.

103
00:08:05,000 --> 00:08:14,700
Este mtodo nos permite representar una funcin de JavaScript como componente de la Dom real y tratarla como una

104
00:08:14,710 --> 00:08:18,960
parte componente es exactamente lo que Riak se preocupa.

105
00:08:19,460 --> 00:08:23,990
Entonces podemos renderizar esta funcin pero no haciendo referencia a ella de esta manera.

106
00:08:24,080 --> 00:08:32,000
Pero al convertirlo en un elemento HVM de nuevo detrs de las escenas utilizando esta sintaxis GSX que

107
00:08:32,000 --> 00:08:33,620
se entiende por reaccionar.

108
00:08:34,040 --> 00:08:42,400
As que escribo esto como mi elemento HVM l de auto-cierre personalizado y render y luego toma otro argumento

109
00:08:42,410 --> 00:08:45,220
donde especifico dnde renderizar esto all.

110
00:08:45,250 --> 00:08:48,860
Me acerco al documento y puede usar un selector de consulta.

111
00:08:48,860 --> 00:08:56,830
Por lo tanto, el cdigo javascript normal para seleccionar cualquier elemento con el ID P1 y que de nuevo es el cdigo JavaScript normal.

112
00:08:56,880 --> 00:08:59,010
El selector de consulta normal.

113
00:08:59,510 --> 00:09:09,650
Con eso le estoy diciendo a Re-Act que quiero hacer que esta funcin sea un componente de persona en las pantallas aqu a

114
00:09:09,650 --> 00:09:12,100
la izquierda y lo hace.

115
00:09:12,320 --> 00:09:19,340
Ahora el estilo est perdido porque la clase en realidad es una palabra clave en javascript, por lo que reaccionan los turistas en el nombre de la clase

116
00:09:19,340 --> 00:09:22,730
y esa es la mejor prueba de que esto se parece a H-G.

117
00:09:22,760 --> 00:09:23,480
Pero no lo es

118
00:09:23,540 --> 00:09:30,350
Utiliza un ndice personalizado que en el 99 por ciento de los casos es como HGL. Pero detrs de las escenas se ha

119
00:09:30,410 --> 00:09:31,410
transformado el javascript.

120
00:09:31,880 --> 00:09:39,800
bloque en lnea aqu se ignora porque estamos envolviendo esto en un elemento personalizado que se trata como un declaracin de bloque.

121
00:09:39,890 --> 00:09:47,000
Y ahora ves que tenemos nuestra clase de persona aqu de nuevo tratada como un componente personalizado que todos

122
00:09:47,000 --> 00:09:50,780
podemos verificar sobre el hecho de que nuestro estilo de

123
00:09:50,780 --> 00:09:53,050
Ahora me sumergir en el estilo en esos ncleos.

124
00:09:53,120 --> 00:09:58,320
Por ahora, vamos a estar contentos de que obtuvimos nuestro componente aqu.

125
00:09:58,580 --> 00:10:00,450
Aunque no es realmente reutilizable.

126
00:10:00,590 --> 00:10:10,450
Si tuviera un segundo gancho en mi H. T. boca cada aqu en mi edad, en parte, digamos con ITP tambin.

127
00:10:10,490 --> 00:10:14,480
Y quera convertir un componente diferente en una persona diferente.

128
00:10:14,780 --> 00:10:19,430
No tendra que codificar los valores en eso y crear un nuevo componente.

129
00:10:19,430 --> 00:10:26,150
Lo bueno de reaccionar y por qu los componentes son tan geniales y nos ahorran mucho tiempo

130
00:10:26,150 --> 00:10:30,060
es que podemos configurarlos dinmicamente a medida que los necesitamos.

131
00:10:30,120 --> 00:10:36,920
Entonces, lo que voy a hacer es agregar un argumento a esta funcin de persona que nombra props.

132
00:10:36,950 --> 00:10:42,950
Puedes elegir el nombre que quieras, pero el concepto que estoy usando aqu se llama prop.

133
00:10:42,950 --> 00:10:48,830
Reaccionar automticamente me da un argumento en esa funcin. Lo convert en un componente con esta

134
00:10:48,830 --> 00:10:57,140
sintaxis aqu abajo con la persona J es cdigo X y Propp simplemente contiene todo el atributos que agrego a mi propio componente.

135
00:10:57,140 --> 00:11:00,320
As que podra agregar el nombre Max y la edad.

136
00:11:00,530 --> 00:11:03,720
Digamos veintiocho como este.

137
00:11:03,900 --> 00:11:08,820
Si hago esto ahora, podemos generar esto en nuestro componente de prisin.

138
00:11:08,820 --> 00:11:12,130
Solo necesitamos acceder dinmicamente al elemento de este accesorio.

139
00:11:12,150 --> 00:11:18,600
Esto genera un argumento de que generamos contenido dinmico y reaccionamos con el cierre de apertura de Cauley Brace y solo

140
00:11:18,600 --> 00:11:19,190
un par.

141
00:11:19,200 --> 00:11:22,540
No hay llaves dobles con rizos, solo un par de llaves.

142
00:11:22,860 --> 00:11:30,540
Daut para obtener este atributo de nombre con el pasado y la edad de la utilera para generar esa edad adinerada ms

143
00:11:30,660 --> 00:11:37,710
all de la antigedad del puntal y ahora estamos usando las propiedades de los atributos que estamos transfiriendo a nuestro

144
00:11:37,830 --> 00:11:44,820
propio componente y eso es muy bien porque ahora si lo repetimos, reacciona darm hacer una llamada aqu para P2.

145
00:11:44,820 --> 00:11:48,010
Y luego buscamos los accesorios y luego el nombre

146
00:11:48,150 --> 00:11:51,510
As que asegrese de que el intercambio no es el segundo selector de consultas.

147
00:11:51,900 --> 00:11:59,370
Podemos pasar diferentes accesorios al componente de la muerte como Manue y 20: 9 y ahora ambos componentes utilizan la misma

148
00:11:59,370 --> 00:12:01,010
base que se puede ver.

149
00:12:01,110 --> 00:12:07,140
Usan la misma funcin que se convierte en un componente por reaccin, pero realmente se

150
00:12:07,140 --> 00:12:14,940
aprovechan del concepto de componente porque solo escribimos el cdigo HMO una vez y ahora podemos reutilizarlo una y

151
00:12:14,940 --> 00:12:15,580
otra vez.

152
00:12:15,720 --> 00:12:19,810
Y apuesto a que puede ver el potencial de esto en aplicaciones muy grandes.

153
00:12:19,890 --> 00:12:26,720
Puede componer toda la aplicacin de piezas reutilizables y este componente ni siquiera utiliza ninguna lgica.

154
00:12:26,850 --> 00:12:32,600
No escucha clics o cosas por el estilo en aplicaciones como la que creamos en este curso.

155
00:12:32,730 --> 00:12:34,160
Por supuesto que haremos eso.

156
00:12:34,200 --> 00:12:41,340
Aadiremos nuestra propia lgica a nuestros componentes y luego tenemos pequeas piezas reutilizables, fciles de manejar y fciles de

157
00:12:41,340 --> 00:12:48,290
manejar con su propia lgica contenida en ellas, que podemos utilizar en cualquier lugar para crear aplicaciones asombrosas.

158
00:12:48,300 --> 00:12:54,690
Esa es la idea detrs de reaccionar y es por eso que es tan genial y por qu el concepto de componentes es tan bueno.

159
00:12:54,690 --> 00:12:56,700
Ahora djame hacer una cosa ms sin embargo.

160
00:12:56,790 --> 00:12:59,670
En este momento estoy llamando a reaccionar en renderizado dos veces.

161
00:12:59,670 --> 00:13:04,440
No hay nada de malo en eso, pero en realidad tambin podemos hacer esto de una manera diferente.

162
00:13:04,440 --> 00:13:10,050
No podramos tener uno si est en la parte HMO que tiene una idea de aplicacin o raz.

163
00:13:10,110 --> 00:13:12,640
No importa ninguna idea de tu eleccin.

164
00:13:12,750 --> 00:13:18,840
Ahora deshazte del acto secundario en la llamada de renderizado y aadir una variable aqu.

165
00:13:18,960 --> 00:13:22,520
Esta variable toda la aplicacin de nombre, pero este nombre tambin depende de usted.

166
00:13:22,620 --> 00:13:25,920
Pero esto muy opuesto tendr algo de j como cdigo X.

167
00:13:25,920 --> 00:13:31,060
Simplemente estoy envolviendo esto entre parntesis para poder escribir este cdigo en mltiples lneas.

168
00:13:31,080 --> 00:13:43,710
de tener que envolverlo con una inmersin, porque GSX tiene el requisito de tener solo un elemento raz, por lo que los elementos adyacentes no estn permitidos.

169
00:13:43,710 --> 00:13:50,580
Ahora, lo que puedo hacer ahora es dar salida a mi componente persona como lo

170
00:13:50,580 --> 00:13:51,650
hice antes

171
00:13:51,660 --> 00:13:56,430
Tambin hablar de esto en, por supuesto, aunque hay formas de evitar esta limitacin.

172
00:13:56,460 --> 00:14:04,560
As que ahora agregu un uso de componentes de dos personas a la variable de mi aplicacin aqu y ahora es

173
00:14:04,800 --> 00:14:14,070
simplemente montar la variable de la aplicacin en el lugar de este elemento con la aplicacin ID que selecciono ajustando mi selector de consulta.

174
00:14:14,070 --> 00:14:18,070
Y ahora ves que tengo los dos elementos ahora uno al lado del otro.

175
00:14:18,300 --> 00:14:23,160
Porque ahora se representan en el mismo gancho en el mismo elemento.

176
00:14:23,160 --> 00:14:32,070
uno reacciona al hacer una llamada y luego crear uno con componentes anidados es una forma mucho ms popular de crear aplicaciones de reactivacin.

177
00:14:32,070 --> 00:14:38,190
Por lo tanto, para decir con la misma profundidad y este mtodo de solo tener un gancho,

178
00:14:38,220 --> 00:14:43,120
Es la manera que usar en este curso y en la prxima conferencia hablar sobre esto.

179
00:14:43,160 --> 00:14:46,910
Como la alternativa con reaccin mltiple en revoques de renderizado.

180
00:14:46,960 --> 00:14:52,010
Pero tenga en cuenta que esta es la forma en que ver con mucha ms frecuencia este enfoque.

181
00:14:52,050 --> 00:14:56,060
Usted crea las llamadas aplicaciones de una sola pgina.

182
00:14:56,080 --> 00:14:59,110
Ahora esta es nuestra primera aplicacin de rplica.

183
00:14:59,130 --> 00:15:01,290
Ahora profundicemos en el reactor.

184
00:15:01,300 --> 00:15:05,160
Continuemos con el Chloris y realmente comencemos con el re-acto.

